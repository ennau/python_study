class Table(object):
    def __init__(self, l, w, h):
        self.l, self.w, self.h = l, w, h


class ReprMixin(object):
    def __repr__(self):
        return "{}({})".format(
        self.__class__.__name__,
        ', '.join(["{}={}".format(k, v) for k, v in self.__dict__.items()])
        )


class TableWithBox(ReprMixin, Table):
    def __init__(self, *args, **kwargs):
        super(TableWithBox, self).__init__(*args, **kwargs)
        self.box_is_opened = False


### Read only variable in class

class A(object):
    def __init__(self):
        self.a = 42
    def __setattr__(self, name, value):
        if hasattr(self, 'a') and name == 'a':
            raise AttributeError('a is read-only')
        super(A, self).__setattr__(name, value)
    def __delattr__(self, name):
        if name == 'a':
            raise AttributeError('a is read-only')
        super(A, self).__delattr__(name)

